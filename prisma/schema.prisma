// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  firstName    String   @default("Josh")
  lastName     String   @default("Wilkinson")
  email        String   @unique
  phoneNumber  String?
  role         String   @default("patient")
  Patient      Patient?
  Staff        Staff?
  lastLoggedIn DateTime @default(now()) @map(name: "last_logged_in")
  createdAt    DateTime @default(now()) @map(name: "created_at")
  updatedAt    DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "users")
}

model Patient {
  id            Int            @id @unique @default(autoincrement())
  userId        String         @unique
  User          User           @relation(fields: [userId], references: [id])
  pickupEnabled Boolean        @default(false) @map(name: "pickup_enabled")
  dob           String?        @map(name: "date_of_birth")
  Prescriptions Prescription[]

  @@map(name: "patients")
}

model Staff {
  id         Int       @id @unique @default(autoincrement())
  userId     String    @unique
  User       User      @relation(fields: [userId], references: [id])
  isAdmin    Boolean   @default(false) @map(name: "is_admin")
  Location   Location? @relation(fields: [locationId], references: [id])
  locationId Int?

  @@map(name: "staff")
}

model Prescription {
  id          Int       @id @unique @default(autoincrement())
  name        String
  status      String    @default("Unfilled")
  pickupTime  DateTime?
  Patient     Patient?  @relation(fields: [patientId], references: [id])
  patientId   Int
  balance     Float
  Location    Location  @relation(fields: [locationId], references: [id])
  LockerBox   LockerBox @relation(fields: [lockerBoxId], references: [id])
  locationId  Int
  lockerBoxId Int
  pickupCode  String

  @@map(name: "prescriptions")
}

model Location {
  id                Int            @id @unique @default(autoincrement())
  streetAddress     String         @default("")
  cardinalDirection String?
  city              String         @default("")
  province          String         @default("")
  country           String         @default("")
  phoneNumber       String         @default("")
  Prescriptions     Prescription[]
  LockerBoxes       LockerBox[]
  Staff             Staff[]

  @@map(name: "locations")
}

model LockerBox {
  id            Int            @id @unique @default(autoincrement())
  label         Int
  status        String
  Location      Location       @relation(fields: [locationId], references: [id])
  locationId    Int
  Prescriptions Prescription[]

  @@unique(fields: [label, locationId], name: "specificLockerBox")
  @@map(name: "locker_box")
}
